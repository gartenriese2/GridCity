//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GridCity.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GridCity.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Agent {
            get {
                object obj = ResourceManager.GetObject("Agent", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Curve {
            get {
                object obj = ResourceManager.GetObject("Curve", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap EmptyField {
            get {
                object obj = ResourceManager.GetObject("EmptyField", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap EndRoad {
            get {
                object obj = ResourceManager.GetObject("EndRoad", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;types&gt;
        ///  &lt;!--EndRoads--&gt;
        ///  &lt;type name=&quot;EndRoad&quot;&gt;
        ///    &lt;nodes&gt;
        ///      &lt;node x=&quot;0.125&quot; y=&quot;0&quot; type=&quot;Pedestrian&quot;&gt;&lt;/node&gt;
        ///      &lt;node x=&quot;0.375&quot; y=&quot;0&quot; type=&quot;Car&quot;&gt;&lt;/node&gt;
        ///      &lt;node x=&quot;0.625&quot; y=&quot;0&quot; type=&quot;Car&quot;&gt;&lt;/node&gt;
        ///      &lt;node x=&quot;0.875&quot; y=&quot;0&quot; type=&quot;Pedestrian&quot;&gt;&lt;/node&gt;
        ///      &lt;node x=&quot;0.125&quot; y=&quot;0.875&quot; type=&quot;Pedestrian&quot;&gt;&lt;/node&gt;
        ///      &lt;node x=&quot;0.375&quot; y=&quot;0.625&quot; type=&quot;Car&quot;&gt;&lt;/node&gt;
        ///      &lt;node x=&quot;0.625&quot; y=&quot;0.625&quot; type=&quot;Car&quot;&gt;&lt;/node&gt;
        ///      &lt;node x=&quot;0.875&quot; y=&quot;0.875&quot; type= [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Fields {
            get {
                return ResourceManager.GetString("Fields", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap MediumResidentialBuilding {
            get {
                object obj = ResourceManager.GetObject("MediumResidentialBuilding", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;types&gt;
        ///  &lt;type name=&quot;Pedestrian&quot;&gt;
        ///    &lt;allowed&gt;PEDESTRIAN&lt;/allowed&gt;
        ///    &lt;public&gt;YES&lt;/public&gt;
        ///  &lt;/type&gt;
        ///  &lt;type name=&quot;PedestrianPrivate&quot;&gt;
        ///    &lt;allowed&gt;PEDESTRIAN&lt;/allowed&gt;
        ///    &lt;public&gt;NO&lt;/public&gt;
        ///  &lt;/type&gt;
        ///  &lt;type name=&quot;Car&quot;&gt;
        ///    &lt;allowed&gt;CAR&lt;/allowed&gt;
        ///    &lt;public&gt;YES&lt;/public&gt;
        ///  &lt;/type&gt;
        ///  &lt;type name=&quot;CarParking&quot;&gt;
        ///    &lt;allowed&gt;CAR&lt;/allowed&gt;
        ///    &lt;allowed&gt;PEDESTRIAN&lt;/allowed&gt;
        ///    &lt;public&gt;YES&lt;/public&gt;
        ///  &lt;/type&gt;
        ///  &lt;type name=&quot;CarParkingPrivate&quot;&gt;
        ///    &lt;all [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Nodes {
            get {
                return ResourceManager.GetString("Nodes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;paths&gt;
        ///  &lt;path name=&quot;PedestrianInBuilding&quot;&gt;
        ///    &lt;type&gt;PEDESTRIAN&lt;/type&gt;
        ///    &lt;speed&gt;1.4&lt;/speed&gt;
        ///  &lt;/path&gt;
        ///  &lt;path name=&quot;Pedestrian&quot;&gt;
        ///    &lt;type&gt;PEDESTRIAN&lt;/type&gt;
        ///    &lt;speed&gt;2.2&lt;/speed&gt;
        ///  &lt;/path&gt;
        ///  &lt;path name=&quot;CarInBuilding&quot;&gt;
        ///    &lt;type&gt;CAR&lt;/type&gt;
        ///    &lt;speed&gt;2.8&lt;/speed&gt;
        ///  &lt;/path&gt;
        ///  &lt;path name=&quot;CarSmallStreet&quot;&gt;
        ///    &lt;type&gt;CAR&lt;/type&gt;
        ///    &lt;speed&gt;8.3&lt;/speed&gt;
        ///  &lt;/path&gt;
        ///&lt;/paths&gt;.
        /// </summary>
        internal static string Paths {
            get {
                return ResourceManager.GetString("Paths", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap SchoolBuilding {
            get {
                object obj = ResourceManager.GetObject("SchoolBuilding", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap SmallResidentialBuilding {
            get {
                object obj = ResourceManager.GetObject("SmallResidentialBuilding", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap StraightRoad {
            get {
                object obj = ResourceManager.GetObject("StraightRoad", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap StraightRoadWithBuildingAccess {
            get {
                object obj = ResourceManager.GetObject("StraightRoadWithBuildingAccess", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap TCrossingWithCrosswalks {
            get {
                object obj = ResourceManager.GetObject("TCrossingWithCrosswalks", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #version 440 core
        ///
        ///layout(location = 0) out vec4 outColor;
        ///
        ///in vec2 UV;
        ///uniform sampler2D tex;
        ///
        ///void main() {
        ///	outColor = texture(tex, UV);
        ///	if (outColor.xyz == vec3(0,0,0)) {
        ///		discard;
        ///	}
        ///}.
        /// </summary>
        internal static string test_frag {
            get {
                return ResourceManager.GetString("test_frag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #version 440 core
        ///
        ///layout(location = 0) in vec3 vertexPosition;
        ///layout(location = 1) in vec2 vertexUV;
        ///
        ///uniform mat4 projection_matrix;
        ///uniform mat4 view_matrix;
        ///uniform mat4 model_matrix;
        ///
        ///out vec2 UV;
        ///
        ///void main() {
        ///	gl_Position = projection_matrix * view_matrix * model_matrix * vec4(vertexPosition, 1);
        ///	UV = vertexUV;
        ///}.
        /// </summary>
        internal static string test_vert {
            get {
                return ResourceManager.GetString("test_vert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap WorkBuilding {
            get {
                object obj = ResourceManager.GetObject("WorkBuilding", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
